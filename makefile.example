## color output
COLOR_NORMAL=$(shell printf '\033[0m')
COLOR_RED=$(shell printf '\033[1;31m')
COLOR_GREEN=$(shell printf '\033[1;32m')
COLOR_YELLOW=$(shell printf '\033[1;33m')

HOME_DIR=$(shell pwd)

DONE="${COLOR_GREEN}Done${COLOR_NORMAL}"

.PHONY: all clean release update update-dev update-main init migrate php nginx restart
.IGNORE: all

all:

init:
	@echo "${COLOR_GREEN}Init ...${COLOR_NORMAL}"
	@(cd logs;rm -rf laravel-logs;ln -sf ../app/logs laravel-logs)
	@chmod 0600 ./config/php-fpm/ssh/id_rsa
	@echo $(DONE)

# --------------------- 框架安装命令 ---------------------

# 用于第一次安装系统，按照提示步骤一步步安装即可
install:
	@$(php) bin/hyperf.php mine:install

# 用于系统更新后升级SQL的命令
update:
	@$(php) bin/hyperf.php mine:update

# --------------------- 模块命令 ---------------------

# 查看本地模块列表
module:
	@$(php) bin/hyperf.php mine:module

# 安装模块 n=模块名称
module-install:
	@$(php) bin/hyperf.php mine:module --option=install --name=$(m)

# 卸载模块 n=模块名称
module-uninstall:
	@$(php) bin/hyperf.php mine:module --option=uninstall --name=$(m)

# --------------------- 数据表迁移命令 ---------------------

# 生成模块数据表迁移 n=模块名称 t=表名称(不带前缀)
migrate-gen:
	@$(php) bin/hyperf.php mine:migrate-gen --module=$(m) $(t)

# 执行模块数据表迁移 n=模块名称
migrate-run:
	@$(php) bin/hyperf.php mine:migrate-run --module=$(m)

# --------------------- 数据表填充命令 ---------------------

# 生成模块数据表填充文件 n=模块名称 t=表名称(不带前缀)
seeder-gen:
	@$(php) bin/hyperf.php mine:seeder-gen --module=$(m) $(t)

# 运行模块数据表填充命令 n=模块名称
seeder-run:
	@$(php) bin/hyperf.php mine:seeder-run --module=$(m)

# --------------------- 模型命令 ---------------------

# 生成模块表模型类 n=模块名称 t=表名称(不带前缀)
model-gen:
	@$(php) bin/hyperf.php mine:model-gen --module=$(m) --table=$(t)

# --------------------- JWT命令 ---------------------

# 生成JWT场景密钥 s=场景名称
jwt-gen:
	@$(php) bin/hyperf.php mine:jwt-gen --jwtSecret=$(s)
